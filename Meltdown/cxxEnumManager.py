from cxxHeaderHandling import CxxEnum

enumRegistry: dict[str, CxxEnum] = {}
namespaceCxx: str = "Uranium"

def RegisterEnum(enum: CxxEnum):
    if enum.name not in enumRegistry:
        enumRegistry[enum.name] = enum

def DoesEnumExist(name: str) -> bool:
    return name in enumRegistry

def GetEnum(name: str) -> CxxEnum | None:
    if DoesEnumExist(name):
        return enumRegistry[name]
    else:
        return None
    
def GenerateEnumList() -> list[str, str]:
    returnList: list[str, str] = []
    for enumName, enum in enumRegistry.items():
        dataBuffer: str = ""
        dataBuffer += f"#pragma once\n// This file was auto generated by the Meltdown Project\n\n"
        dataBuffer += enum.generateEnumCxxDef(namespaceCxx)
        if enum.hasTranslation():
            dataBuffer += enum.generateEnumConversionArray(namespaceCxx)
            dataBuffer += enum.generateEnumConversionFunction(namespaceCxx)
        returnList.append((enumName, dataBuffer))
    return returnList
        
